version: '3.4'

services:
#  bliss.recruitment.simple.api:
#    environment:
#      ASPNETCORE_ENVIRONMENT: Development
#      ASPNETCORE_URLS: https://+:443;http://+:80
#      ConnectionStrings__DefaultConnection: "Server=database.bliss.recruitment;Database=Recruitment;User Id=sa;Password=Pa55w0rd;"
#    ports:
#      - "80"
#      - "443"
#    volumes:
#      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
#      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  database.bliss.recruitment:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Pa55w0rd"
      DATABASE: "Recruitment"
    ports:
      - 1433:1433
    volumes:
      - ./Bliss.Recruitment.Simple.Data/Scripts:/scripts/
    command:
      - /bin/bash
      - -c 
      - |
        /opt/mssql/bin/sqlservr &
        pid=$$!
        echo "Waiting for MS SQL to be available"
        /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
        is_up=$$?
        while [ $$is_up -ne 0 ] ; do
          echo -e $$(date)
          /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          sleep 5
        done
        for foo in /scripts/*.sql
          do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
        done
        echo "All scripts have been executed. Waiting for MS SQL(pid $$pid) to terminate."
        wait $$pid